{
    // Place your workspace snippets here. Each snippet is defined under a snippet name and has a scope, prefix, body and
    // description. Add comma separated ids of the languages where the snippet is applicable in the scope field. If scope
    // is left empty or omitted, the snippet gets applied to all languages. The prefix is what is
    // used to trigger the snippet and the body will be expanded and inserted. Possible variables are:
    // $1, $2 for tab stops, $0 for the final cursor position, and ${1:label}, ${2:another} for placeholders.
    // Placeholders with the same ids are connected.
    // Example:
    // "Print to console": {
    // 	"scope": "javascript,typescript",
    // 	"prefix": "log",
    // 	"body": [
    // 		"console.log('$1');",
    // 		"$2"
    // 	],
    // 	"description": "Log output to console"
    // }
    // "Logger info": {
    // 	"scope": "python",
    // 	"prefix": "logi",
    // 	"body": [
    // 		"logger.info(f\"$1\")",
    // 		"$2"
    // 	],
    // 	"description": "Log output to console"
    // },
    // "Logger print Blue": {
    //     "scope": "python",
    //     "prefix": "logpb",
    //     "body": [
    //         "logger.print(f\"ðŸ”µ $1\")",
    //         "$2"
    //     ],
    //     "description": "Log output to console"
    // },
    // "Logger print Green": {
    //     "scope": "python",
    //     "prefix": "logpg",
    //     "body": [
    //         "logger.print(f\"ðŸŸ¢ $1\")",
    //         "$2"
    //     ],
    //     "description": "Log output to console"
    // },
    // "Logger error": {
    // 	"scope": "python",
    // 	"prefix": "loge",
    // 	"body": [
    // 		"logger.error(f\"ðŸ”´ $1\")",
    // 		"$2"
    // 	],
    // 	"description": "Log output to console"
    // },
    // "Logger warning": {
    // 	"scope": "python",
    // 	"prefix": "logw",
    // 	"body": [
    // 		"logger.warning(f\"ðŸŸ¡ $1\")",
    // 		"$2"
    // 	],
    // 	"description": "Log output to console"
    // },
    // "Logger critical": {
    // 	"scope": "python",
    // 	"prefix": "logc",
    // 	"body": [
    // 		"logger.critical(f\"ðŸ›‘ $1\")",
    // 		"$2"
    // 	],
    // 	"description": "Log output to console"
    // },
    // "Logger debug": {
    // 	"scope": "python",
    // 	"prefix": "logd",
    // 	"body": [
    // 		"logger.debug(f\"ðŸŸ¤ $1\")",
    // 		"$2"
    // 	],
    // 	"description": "Log output to console"
    // },
    "Pylint disable": {
        "scope": "python",
        "prefix": "pyd",
        "body": ["# pylint: disable=$1", "$2"],
        "description": "Pylint disable"
    },
    "Pyright disable": {
        "scope": "python",
        "prefix": "pyr",
        "body": ["# pyright: reportUnknownMemberType=false", "$2"],
        "description": "Pyright disable"
    },
    "Type ignore": {
        "scope": "python",
        "prefix": "tyi",
        "body": ["# type: ignore", "$2"],
        "description": "Type ignore"
    }
}
